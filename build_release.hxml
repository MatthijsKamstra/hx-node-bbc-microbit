# Libraries you like to use (http://lib.haxe.org/)
#-lib jQueryExtern
# -lib js-kit
-lib hxnodejs
-lib bbc-microbit

# Integrate files to classpath
-cp src

# This class wil be used as entry point for your app.
-main Main

# Node.js target
-js bin/bbc-microbit.js

# You can use -D source-map-content (requires Haxe 3.1+) to have the .hx
# files directly embedded into the map file, this way you only have to
# upload it, and it will be always in sync with the compiled .js even if
# you modify your .hx files.
-D source-map-content

# Don't generate node.js version warning when -D hxnodejs-no-version-warning
# -D hxnodejs_no_version_warning

# For cleaner JavaScript output, since node.js is ES5-compilant
#-D js-es5


# Compiler flag is a configurable value which may influence the compilation process.
-D state=release

# Add debug information
#-debug

--no-traces

# Dead code elimination : remove unused code
# "-dce no" : do not remove unused code
# "-dce std" : remove unused code in the std lib (default)
# "-dce full" : remove all unused code
-dce full

# Resources like templates
# -resource src/assets/LICENSE@licence

# Additional commandline actions can be done here
# -cmd cp -R src/assets/img bin/www

# Run node application as node.js
# -cmd cd bin
# -cmd node example_node_js.js


# Add extra targets
# --next
